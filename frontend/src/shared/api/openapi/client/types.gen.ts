// This file is auto-generated by @hey-api/openapi-ts

/**
 * Модель пользователя системы
 */
export type User = {

	/**
	 * Уникальный идентификатор пользователя
	 */
	id: string;

	/**
	 * Email адрес пользователя
	 */
	email: string;

	/**
	 * Полное имя пользователя
	 */
	full_name: string;
	role: UserRole;
};

export type UserRole = 'CONTRACTOR' | 'CUSTOMER' | 'INSPECTOR';

export const UserRole = {
	CONTRACTOR: 'CONTRACTOR',
	CUSTOMER: 'CUSTOMER',
	INSPECTOR: 'INSPECTOR'
} as const

/**
 * Модель проекта
 */
export type Project = {

	/**
	 * Уникальный идентификатор проекта
	 */
	id: string;

	/**
	 * Название проекта
	 */
	name: string;

	/**
	 * ID заказчика
	 */
	customer_id: string;

	/**
	 * ID подрядчика
	 */
	contractor_id?: (string) | null;

	/**
	 * ID геоточки проекта
	 */
	geopoint_id: string;

	/**
	 * Дата начала проекта
	 */
	start_date: Date;

	/**
	 * Планируемая дата завершения
	 */
	end_date: Date;
	status: ProjectStatus;
};

/**
 * Статус проекта
 */
export type ProjectStatus = 'CREATED' | 'BEING_INITIALIZED' | 'ACTIVE' | 'FINISHED';

/**
 * Статус проекта
 */
export const ProjectStatus = {
	CREATED: 'CREATED',
	BEING_INITIALIZED: 'BEING_INITIALIZED',
	ACTIVE: 'ACTIVE',
	FINISHED: 'FINISHED'
} as const

export type UserLoginData = {
	body: {
		email: string;
		password: string;
	};
};

export type UserLoginResponse = ({
	refresh_token: string;
	access_token: string;
});

export type UserLoginError = (unknown);

export type UserLogoutResponse = (void);

export type UserLogoutError = (unknown);

export type RefreshTokenData = {
	body: {
		refresh_token: string;
	};
};

export type RefreshTokenResponse = ({
	access_token: string;
});

export type RefreshTokenError = unknown;

export type GetAuthenticatedUserResponse = (User);

export type GetAuthenticatedUserError = (unknown);

export type GetAllProjectsResponse = (Array<Project>);

export type GetAllProjectsError = (unknown);

export type GetAllProjectsResponseTransformer = (data: any) => Promise<GetAllProjectsResponse>;

export type ProjectModelResponseTransformer = (data: any) => Project;

export const ProjectModelResponseTransformer: ProjectModelResponseTransformer = data => {
	if (data?.start_date) {
		data.start_date = new Date(data.start_date)
	}

	if (data?.end_date) {
		data.end_date = new Date(data.end_date)
	}

	return data
}

export const GetAllProjectsResponseTransformer: GetAllProjectsResponseTransformer = async data => {
	if (Array.isArray(data)) {
		data.forEach(ProjectModelResponseTransformer)
	}

	return data
}