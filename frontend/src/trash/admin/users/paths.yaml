# Users
Users:
  get:
    tags:
      - users
    summary: Get all users
    parameters:
      - name: roles_slugs[]
        in: query
        required: false
        schema:
          type: array
          items:
            $ref: './schemas.yaml#/RoleSlugs'
        explode: true
        style: form
      - name: login
        in: query
        required: false
        schema:
          type: string
      - name: email
        in: query
        required: false
        schema:
          type: string
      - name: last_name
        in: query
        required: false
        schema:
          type: string
      - name: category_ids[]
        in: query
        required: false
        schema:
          type: array
          items:
            type: number
        explode: true
        style: form
      - name: page
        in: query
        required: false
        schema:
          type: number
      - name: page_size
        in: query
        required: false
        schema:
          type: number
      - name: include
        in: query
        required: true
        schema:
          type: string
          enum: ['userInfo,roles,categories']
    operationId: getUsers
    responses:
      200:
        description: Users have been got successfully
        content:
          application/json:
            schema:
              $ref: './schemas.yaml#/UserListResponseBodyWithIncluded'
            examples:
              usersResponse:
                $ref: './examples.yaml#/UserListResponseExample'
      default:
        description: Unexpected error
    security:
      - jwt: []

UsersRolesId:
  parameters:
    - name: user_id
      in: path
      required: true
      schema:
        type: integer
  post:
    tags:
      - users
    summary: Add roles to the user
    operationId: attachRoles
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: './schemas.yaml#/RolesAssignmentRequestBody'
    responses:
      200:
        description: The roles are successfully attached to the user
        content:
          application/json:
            schema:
              $ref: './schemas.yaml#/UserBaseResponseBody'
      default:
        description: Unexpected error
    security:
      - jwt: []
  put:
    tags:
      - users
    summary: Update roles for the user
    operationId: updatesRolesForUser
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: './schemas.yaml#/RolesAssignmentRequestBody'
    responses:
      200:
        description: The roles are successfully updated for the user
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: './schemas.yaml#/UserBaseResponseBody'
      default:
        description: Unexpected error
    security:
      - jwt: []
  delete:
    tags:
      - users
    summary: Removes roles from the user
    operationId: detachRoles
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: './schemas.yaml#/RolesAssignmentRequestBody'
    responses:
      200:
        description: The roles are successfully detached from the user
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: './schemas.yaml#/UserBaseResponseBody'
      default:
        description: Unexpected error
    security:
      - jwt: []

UsersCategoriesId:
  parameters:
    - name: user_id
      in: path
      required: true
      schema:
        type: integer
  post:
    tags:
      - users
    summary: Add categories to the user
    operationId: attachCategories
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: './schemas.yaml#/CategoriesAssignmentRequestBody'
    responses:
      200:
        description: The categories are successfully attached to the user
        content:
          application/json:
            schema:
              $ref: './schemas.yaml#/UserBaseResponseBody'
      default:
        description: Unexpected error
    security:
      - jwt: []
  put:
    tags:
      - users
    summary: Update categories for the user
    operationId: updatesCategoriesForUser
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: './schemas.yaml#/CategoriesAssignmentRequestBody'
    responses:
      200:
        description: The categories are successfully updated for the user
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: './schemas.yaml#/UserBaseResponseBody'
      default:
        description: Unexpected error
    security:
      - jwt: []
  delete:
    tags:
      - users
    summary: Removes categories from the user
    operationId: detachCategories
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: './schemas.yaml#/CategoriesAssignmentRequestBody'
    responses:
      200:
        description: The categories are successfully detached from the user
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: './schemas.yaml#/UserBaseResponseBody'
      default:
        description: Unexpected error
    security:
      - jwt: []
