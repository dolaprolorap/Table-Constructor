AchievementStatusSlug:
  type: string
  enum:
    - sent
    - accepted
    - rejected

AchievementAttributes:
  type: object
  properties:
    title:
      type: string
    user_id:
      type: integer
    grant_date:
      type: string
    status:
      $ref: '#/AchievementStatusSlug'
    answer:
      type: string
    value:
      type: string
    s3_url:
      type: string
    achievement_schema_id:
      type: integer
    verifier_comment:
      type: string
      nullable: true
    verifier_email:
      type: string
      nullable: true
    verifier_date:
      type: string
      nullable: true
  required:
    - title
    - user_id
    - grant_date
    - status
    - answer
    - value
    - s3_url
    - achievement_schema_id

Achievement:
  type: object
  discriminator:
    propertyName: type
  properties:
    id:
      type: string
    type:
      type: string
      enum: ['achievements']
    attributes:
      $ref: '#/AchievementAttributes'
    relationships:
      type: object
      properties:
        achievement_schema:
          $ref: '../../common/jsonapi/schemas.yaml#/EntityRelationIdentifier'
        category:
          $ref: '../../common/jsonapi/schemas.yaml#/EntityRelationIdentifier'
        user:
          $ref: '../../common/jsonapi/schemas.yaml#/EntityRelationIdentifier'
        userInfo:
          $ref: '../../common/jsonapi/schemas.yaml#/EntityRelationIdentifier'
      required:
        - achievement_schema
        - category
        - user
        - userInfo
    meta:
      $ref: '../../common/jsonapi/schemas.yaml#/CreateUpdateTimeMeta'
  required:
    - id
    - type
    - attributes
    - meta

AchievementResponseBase:
  type: object
  properties:
    included:
      type: array
      items:
        oneOf:
          - $ref: '../achievement-schemas/schemas.yaml#/AchievementScheme'
          - $ref: '../categories/schemas.yaml#/AchievementCategory'
          - $ref: '../users/schemas.yaml#/UserInfo'
          - $ref: '../users/schemas.yaml#/User'
    meta:
      $ref: '../../common/jsonapi/schemas.yaml#/PaginationMeta'
  required:
    - included
    - meta

AchievementListResponseBody:
  allOf:
    - $ref: '#/AchievementResponseBase'
    - type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/Achievement'
      required:
        - data

AchievementResponseBody:
  allOf:
    - $ref: '#/AchievementResponseBase'
    - type: object
      properties:
        data:
          $ref: '#/Achievement'
      required:
        - data

AchievementRequestBody:
  type: object
  properties:
    title:
      type: string
      description: The title of the achievement
    answer:
      type: string
      description: Answer related to the achievement in JSON format
    achievement_schema_id:
      type: string
      description: ID of the achievement schema
    file:
      type: string
      format: binary
      description: File attachment for the achievement

AchievementPartialUpdateRequestBody:
  type: object
  properties:
    data:
      type: object
      properties:
        type:
          type: string
          enum: ['achievements']
        attributes:
          type: object
          properties:
            title:
              type: string
            answer:
              type: string
            verifier_comment:
              type: string
            status:
              type: string
      required:
        - type
        - attributes
  required:
    - data
